---
title: "R Notebook"
output: html_notebook
---

# Optimisation in data analysis

## Artifical test sets

### Models

```{r}

# source("R/classes.R")
# source("R/helpers.R")
# source("R/models.R")
# source("R/group_lars.R")
# source("R/group_lasso.R")
# source("R/testing.R")
library(grrrr)
library(gglasso)
library(xtable)

```


# LARS

```{r}

ols_name <- "OLS"
step_name <- "Step regression"
lars_gr_cp_name <- "Lars group Cp"
lars_gr_me_name <- "Lars group ME"
lasso_ext_name <- "GGLasso group (external)"
lasso_gr_me_name <- "Lasso group ME"
lasso_gr_cp_name <- "Lasso group Cp"
lars_cp_name <- "Lars ordinary Cp"
lars_me_name <- "Lars ordinary ME"

tests_rows <- c(lars_gr_cp_name, lasso_gr_cp_name)
tests_cols <- c(lars_cp_name, step_name)

n_ <- 200

getwd()
output_folder <- "../outputs/"

for (model in c("1", "2", "3", "4")) {
    create_model <- eval(parse(text = paste0("create_model", model)))

    container <- new(
        "test_container"
    )
    container <- container + calculate_test(ols_name, test_ls, n = n_, create_model)
    container <- container + calculate_test(step_name, test_step, n = n_, create_model)
    container <- container + calculate_test(lars_gr_cp_name, test_lars_group, n = n_, create_model, result_indicator = "cp")
    container <- container + calculate_test(lars_gr_me_name, test_lars_group, n = n_, create_model, result_indicator = "me")
    container <- container + calculate_test(lasso_ext_name, test_lasso_group_library, n = n_, create_model)
    container <- container + calculate_test(lasso_gr_me_name, test_lasso_group, n = n_, create_model, result_indicator = "me")
    container <- container + calculate_test(lasso_gr_cp_name, test_lasso_group, n = n_, create_model, result_indicator = "cp")
    container <- container + calculate_test(lars_cp_name, test_lars, n = n_, create_model, result_indicator = "cp")
    container <- container + calculate_test(lars_me_name, test_lars, n = n_, create_model, result_indicator = "me")
    
    results_table <- create_table(container)
    bp_md <- create_boxplot(container, "model_error")
    bp_fact <- create_boxplot(container, "n_factors")
    bp_time <- create_boxplot(container, "cpu_time")
    
    restults_tt <- perform_ttest(container, tests_rows, tests_cols)
    
    print(xtable(results_table, type = "latex", caption = paste("Results of Model", model)),
          file = paste0(output_folder, "results_", model,  ".tex"))
    print(xtable(restults_tt, type = "latex", caption = paste("T-test for Model", model)),
          file = paste0(output_folder, "ttest_model", model,  ".tex"))
    ggplot2::ggsave(
      paste0(output_folder, "bp_me_model", model,  ".jpg"),
      plot = bp_md)
    ggplot2::ggsave(
      paste0(output_folder, "bp_fact_model", model,  ".jpg"),
      plot = bp_fact)
    ggplot2::ggsave(
      paste0(output_folder, "bp_time_model", model,  ".jpg"),
      plot = bp_time)
}

```